{"version":3,"sources":["Sequencer.js","component/Waveform.js","component/Loops.js","App.js","index.js"],"names":["defaultPads","Sequencer","props","state","addTrack","bind","getRandomTemplate","startSequence","stopSequence","group","pad","this","setState","clonedPads","pads","slice","padState","tracks","console","log","server_url","fetch","then","res","json","tempPads","map","obj","push","sequence","Sequence","time","columnIndex","CurrentColumn","column","players","forEach","on","row","get","start","_","range","Transport","stop","urlsDecision","volumes","length","urls","item","Players","volume","toMaster","i","value","bpm","mute","removeAll","className","groupIndex","key","onClick","togglePad","play","Component","Waveform","canvasClick","drawWaveform","connectAudio","disconnectAudio","data","w","h","color","ctx","canvas","getContext","rects","step","Math","ceil","amp","min","max","j","datum","x","y","width","height","getRects","clearRect","fillStyle","r","fillRect","chooseColumn","index","player","loop","sync","restart","seek","seconds","buffer","duration","unsync","url","colors","loadCompleted","Player","getChannelData","prevProps","prevState","currentLoadStatue","ref","style","border","backgroundColor","reducer","accumulator","currentValue","volumeTransfer","ratio","Loops","toggleLock","changeLoop","toggleMute","volumeAdjust","event","target","updateVolmes","loaded","tempState","updateDecision","getNextLoop","playColumns","reduce","lock_statue_update","updateLockStatue","alert","sequencer","lockStatue","toggleSequencer","updateLoadStatue","group_index","type","onInput","App","getMainLoop","getAccompanyLoop","number","method","response","ok","Error","statusText","result","groupUrls_update","groupUrls","main","mashup_url","rank","loadStatue","decision","Helmet","WebFont","load","google","families","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48cd98be.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Players, Transport, Sequence } from \"tone\";\nimport _ from 'lodash';\n\n\nconst ROOT_URL = `http://140.109.21.190:5000/download_filepath`\nconst defaultPads = [[1, 0, 0, 0],[1, 0, 0, 0],[1, 0, 0, 0],[1, 0, 0, 0],[1, 0, 0, 0],[1, 0, 0, 0],[1, 0, 0, 0],[1, 0, 0, 0]]\n\nclass Sequencer extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { 'pads': defaultPads, 'tracks': 4, 'CurrentColumn': 0, 'play': false }\n        this.addTrack = this.addTrack.bind(this)\n        this.getRandomTemplate = this.getRandomTemplate.bind(this)\n        this.startSequence = this.startSequence.bind(this)\n        this.stopSequence  = this.stopSequence.bind(this)\n    }\n\n    togglePad(group, pad) {\n        this.setState(state => {\n            const clonedPads = state.pads.slice(0)\n            const padState = clonedPads[group][pad]\n            clonedPads[group][pad] = padState === 1 ? 0 : 1\n            return {\n                pads: clonedPads\n            }\n        })\n    }\n\n    getRandomTemplate() {\n        if (this.state.tracks < 2) return\n        console.log(`${this.state.server_url}/get_template/${this.state.tracks}`)\n        fetch(`${this.state.server_url}/get_template/${this.state.tracks}`)\n            .then(res => res.json())\n            .then(res => this.setState({ pads: res['template'] }))\n    }\n\n\n    addTrack() {\n        let pads = this.state.pads\n        let tracks  = this.state.tracks\n\n        if (tracks >= 9) {\n            return \n        }\n\n        const clonedPads = pads.slice(0)\n        let tempPads = clonedPads.map(function(obj) {\n            obj.push(0)\n            return obj\n        })\n        tracks = tracks + 1\n        this.setState({ pads: tempPads, tracks: tracks})\n        this.getRandomTemplate()\n    }\n\n\n    startSequence() {\n        let sequence = new Sequence((time, columnIndex) => {\n            this.setState({ CurrentColumn: columnIndex })\n            const column = this.state.pads[columnIndex];\n            const players = this.state.players\n            column.forEach((on, row) => {\n                if (on) {\n                    players.get(row).start(time);\n                }\n            });\n            console.log('sequence: ', time)\n        }, _.range(8), `${8}n`).start()\n\n        this.setState({ sequence: sequence })\n        Transport.start()\n        this.setState({'play': true})\n    }\n\n    stopSequence() {\n        Transport.stop()\n        this.setState({ 'play': false })\n    }\n\n    componentWillMount() {\n        const { server_url } = this.props\n        this.setState({ server_url })\n    }\n\n    componentDidMount() {\n        const { urlsDecision, volumes } = this.props\n\n        \n        let tracks  = urlsDecision.length\n        this.getRandomTemplate()\n\n        let urls = urlsDecision.map(item => `${this.state.server_url}/download_filepath?url=${item}`);  \n\n        let players = new Players(urls, () => {\n            this.setState({ 'players': players })\n            this.setState({ 'tracks': tracks })\n            this.setState({ 'urls': urls })\n        }, { volume: volumes }).toMaster();\n\n        for (let i = 0; i < urls.length; i++) {\n            players.get(i).volume.value = volumes[i]\n        }\n\n        Transport.bpm.value = 20 \n\n    }\n\n\n    componentWillUnmount() {\n        if(this.state.sequence) {\n            this.state.sequence.mute = true\n            this.state.sequence.stop().removeAll()\n        }\n        console.log('will unmount')\n    }\n\n\n\n    render() {\n        const { pads } = this.state\n        return (\n            <div className='sequencer'>\n                <h4 className='text'>Arrange Sequencer to Complete Beat</h4>\n                <div className='pads'>\n                    {pads.map((group, groupIndex) => (\n                        <div key={`pad-${groupIndex}`}>\n                            <div key={`progress-${groupIndex}`}\n                                className={`progress ${(groupIndex == this.state.CurrentColumn) && ' progress_on'}`}\n                            >\n                            </div>\n                            {group.map((pad, i) => (\n                                <div\n                                    key={`pad-group-${i}`}\n                                    className={`pad ${(pad == 1) && ' pad_on'}`}\n                                    onClick={() => {\n                                        this.togglePad(groupIndex, i)\n                                    }}>\n                                </div>\n                            ))}\n                        </div>))\n                    }\n                </div>\n                \n                {!this.state.play\n                    ? <button className='main-btn' onClick={this.startSequence}>Start</button> \n                    : <button className='sub-btn' onClick={this.stopSequence}>Stop</button>\n                }\n                {/* <button className='main-btn' onClick={this.addTrack}>Add Track</button> */}\n                <button className='main-btn' onClick={this.getRandomTemplate}>Get Template</button>\n            </div>\n        )\n    }\n}\n\nexport default Sequencer;\n","import React, { Component } from 'react';\nimport { Player, Transport } from \"tone\";\n\n\nfunction getRects(data, w, h) {\n    const step = Math.ceil(data.length / w)\n    const amp = h / 2\n    const rects = []\n\n    for (let i = 0; i < w; i++) {\n        let [min, max] = [1, -1]\n        for (let j = 0; j < step; j++) {\n            const datum = data[(i * step) + j]\n            if (datum < min) min = datum\n            if (datum > max) max = datum\n        }\n\n        rects.push({\n            x: i,\n            y: (1 + min) * amp,\n            width: 1,\n            height: Math.max(1, (max - min) * amp)\n        })\n    }\n\n    return rects\n}\n\nclass Waveform extends Component {\n    constructor(props) {\n        super(props)\n        this.state = ({})\n        this.canvasClick = this.canvasClick.bind(this)\n        this.drawWaveform = this.drawWaveform.bind(this)\n        this.connectAudio = this.connectAudio.bind(this)\n        this.disconnectAudio = this.disconnectAudio.bind(this)\n    }\n\n    drawWaveform(data, w, h, color) {\n        let ctx = this.canvas.getContext(`2d`)\n        let rects = getRects(data, w, h)\n\n        ctx.clearRect(0, 0, w, h);\n        ctx.fillStyle = color\n        rects.forEach(r => ctx.fillRect(r.x, r.y, r.width, r.height))\n\n    }\n\n    canvasClick() {\n        if (this.state.value == 1) {\n            this.state.chooseColumn(-1)\n        } else {\n            this.state.chooseColumn(this.state.index)\n        }\n    }\n\n    connectAudio() {\n        if (this.state.player) {\n            this.state.player.loop = true\n            if (Transport.state == 'stopped') {\n                this.state.player.sync().start()\n                Transport.start()\n            } else {\n                this.state.player.sync().restart().seek(Transport.seconds % this.state.player.buffer.duration)\n            }\n            this.state.player.mute = false\n        }\n    }\n\n    disconnectAudio() {\n        if (this.state.player) {\n            this.state.player.loop = false\n            this.state.player.mute = true\n            this.state.player.stop().unsync()\n        }\n    }\n\n    componentWillMount() {\n        const { server_url } = this.props\n        this.setState({ server_url })\n        }\n\n    componentDidMount() {\n        const { url, value, index, colors, chooseColumn, loadCompleted } = this.props\n        this.setState({ url, value, index, colors, chooseColumn, loadCompleted })\n        if (url != null) {\n            var player = new Player(url, () => {\n                let data = player.buffer.getChannelData()\n                this.drawWaveform(data, this.canvas.width, this.canvas.height, colors[0])\n                player.toMaster()\n                this.setState({ player, data })\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n\n        if (prevProps == this.props) return\n\n        const { index, url, value, colors, mute, currentLoadStatue, volume } = this.props\n\n        if (volume != prevProps.volume && this.state.player) {\n            this.state.player.volume.value = volume\n        }\n\n        if (url != null && (!this.state.player || currentLoadStatue == 1)) {\n            if (prevState.url == url) return\n\n            var player = new Player(`${this.state.server_url}/download_filepath?url=${url}`, () => {\n                let data = player.buffer.getChannelData()\n                this.drawWaveform(data, this.canvas.width, this.canvas.height, colors[0])\n                player.toMaster()\n                player.volume.value = -15\n                this.state.loadCompleted()\n                this.setState({ player, data })\n            })\n        }\n\n        this.setState({ url, value, index, colors })\n\n        if (this.state.player) {\n            if (mute == prevProps.mute) {   \n                if(value == prevProps.value) return\n                if (value == 1) {\n                    this.drawWaveform(this.state.data, this.canvas.width, this.canvas.height, colors[1])\n                    this.connectAudio()\n                } else if (value == 0) {\n                    this.disconnectAudio()\n                    this.drawWaveform(this.state.data, this.canvas.width, this.canvas.height, colors[0])\n                }   \n            } else {\n                if (mute == 1) {\n                    this.state.player.mute = true\n                } else {\n                    this.state.player.mute = false\n                }  \n            }\n         \n        }\n    }\n\n\n\n    render() {\n        return (\n            <div className='waveform'>\n                <canvas\n                    className='draw'\n                    ref={x => this.canvas = x}\n                    style={{ border: `1px solid ${this.props.colors[0]}`, backgroundColor: `#0f4c81` }}\n                    onClick={this.canvasClick}\n                />\n            </div>\n        )\n    }\n\n}\n\nexport default Waveform;","import React, { Component } from 'react';\nimport Waveform from './Waveform'\n\nconst colors = ['#F4F1EE', '#FFF130']\nconst reducer = (accumulator, currentValue) => accumulator + currentValue;\n\nconst volumeTransfer = (value, max=-1, min=-40) => {\n    const ratio = value / 100;\n    const volume = min + (max - min) * ratio\n    return volume\n}\n\nclass Loops extends Component {\n    constructor(props) {\n        super(props)\n        this.state = ({\n            'urls': null,\n            'mute': false,\n            'value': false,\n            'players': null,\n            'loaded': 0,\n            'volume': volumeTransfer(-15),\n            'playColumns': [0, 0, 0, 0]\n        })\n\n        this.toggleLock    = this.toggleLock.bind(this)\n        this.changeLoop    = this.changeLoop.bind(this)\n        this.toggleMute    = this.toggleMute.bind(this)\n        this.volumeAdjust = this.volumeAdjust.bind(this) \n        this.chooseColumn  = this.chooseColumn.bind(this)\n        this.loadCompleted = this.loadCompleted.bind(this)\n\n    }\n\n    volumeAdjust(event) {\n        let volume = volumeTransfer(event.target.value)\n        this.state.updateVolmes(this.state.index, volume)\n        this.setState({ 'volume': volume})\n    }\n\n    loadCompleted() {\n        if (this.state.loaded >= 4) return\n        this.setState({ 'loaded': this.state.loaded + 1 })\n    }\n\n\n    chooseColumn(index) {\n        if (this.state.value) return\n        let tempState = [0, 0, 0, 0]\n        if (index != -1) {\n            tempState[index] = 1\n        }\n        this.state.updateDecision(this.state.index, this.state.urls[index])\n        this.setState({ 'playColumns': tempState })\n    }\n\n    changeLoop() {\n        if (this.state.currentLoadStatue == 1) {\n            console.log('can not change, still loading')\n            return\n        }\n\n        let index = this.state.index\n        let urls = this.state.urlsDecision\n        if (index == 0) {\n            this.state.getNextLoop(4)\n        }\n        else {\n            this.state.getNextLoop(index - 1, urls[index - 1])\n        }\n\n        this.chooseColumn(-1)\n    }\n\n    toggleLock() {\n        if (this.state.playColumns.reduce(reducer) == 0) {\n            alert('choose one loop')\n            return\n        }\n        let lock_statue_update = !this.state.value ? 1 : 0\n        this.state.updateLockStatue(this.state.index, lock_statue_update)\n        \n    }\n\n    toggleMute() {\n        if (this.state.playColumns.reduce(reducer) == 0) {\n            alert('choose one loop')\n            return\n        }\n         if (this.state.sequencer) {\n            if (this.state.lockStatue[this.state.index]) {\n                this.toggleLock()\n            }\n            this.state.toggleSequencer()\n        }       \n        this.setState({ 'mute': !this.state.mute })\n    }\n\n    componentWillMount() {\n        const { server_url} = this.props\n        this.setState({ server_url })\n    }\n\n    componentDidMount() {\n        const { index, value, urls, updateLockStatue, getNextLoop, updateDecision, toggleSequencer, updateLoadStatue, updateVolmes  } = this.props\n            this.setState({ index, value, urls, updateLockStatue, getNextLoop, updateDecision, toggleSequencer, updateLoadStatue, updateVolmes })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        if (prevState != this.state) {\n            if (this.state.loaded == 4) {\n                this.setState({ 'loaded': 0 })\n                this.state.updateLoadStatue(this.state.index, 0)\n            }\n        }\n\n\n        if (prevProps != this.props) {\n            const { index, value, urls, lockStatue, sequencer, currentLoadStatue, urlsDecision } = this.props\n            if(sequencer != prevProps.sequencer) {\n                if(sequencer == 1) {\n                    this.state.mute = true\n                } \n            }   \n            this.setState({ index, value, urls, lockStatue, sequencer, currentLoadStatue, urlsDecision })\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className='loops'>\n                    {this.state.playColumns.map((value, index) => (\n                        <Waveform\n                            key={index}\n                            index={index}\n                            value={value}\n                            mute={this.state.mute}\n                            group_index={this.state.index}\n                            url={this.state.urls == null ? null : this.state.urls[index]}\n                            colors={colors}\n                            volume={this.state.volume}\n                            chooseColumn={this.chooseColumn}\n                            loadCompleted={this.loadCompleted}\n                            currentLoadStatue={this.state.currentLoadStatue}    \n                            server_url={this.state.server_url}\n                        />\n                    ))}\n                </div>\n                <div className='btn-group'>\n                    {(!this.state.value && !this.state.currentLoadStatue) ? <button className='main-btn' onClick={this.changeLoop}>Change</button> : <button className='sub-btn'>Later</button>}\n                    <button className={this.state.value ? 'sub-btn' : 'main-btn'} onClick={this.toggleLock}>{this.state.value ? 'unLock' : 'Lock'}</button>\n                    {(this.state.mute) ? <button className='sub-btn' onClick={this.toggleMute}>unMute</button> : <button className='main-btn' onClick={this.toggleMute}>Mute</button>}\n                    <input type=\"range\" min='0' max='100' className=\"volume\" onInput={this.volumeAdjust} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Loops;","import React, { Component } from 'react';\nimport Sequencer from './Sequencer';\nimport Loops from './component/Loops'\nimport { Helmet } from 'react-helmet'\n\nconst title = 'ML Mashup'\n\n\nconst reducer = (accumulator, currentValue) => accumulator + currentValue;\nconst server_url = 'https://musicai.citi.sinica.edu.tw/mashup_ml_server'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = ({\n      'loadStatue'   : [0, 0, 0, 0], // 0 -> finish, 1 -> loading\n      'lockStatue'   : [0, 0, 0, 0],\n      'volumes'      : [-15, -15, -15, -15],\n      'groupUrls'    : [],\n      'urlsDecision' : [],\n      'sequencer'    : false,\n      'server_url'    : server_url\n \n    })\n\n    this.getMainLoop      = this.getMainLoop.bind(this);\n    this.updateLockStatue = this.updateLockStatue.bind(this);\n    this.updateDecision   = this.updateDecision.bind(this)\n    this.getAccompanyLoop = this.getAccompanyLoop.bind(this)\n    this.updateLoadStatue = this.updateLoadStatue.bind(this)\n    this.toggleSequencer  = this.toggleSequencer.bind(this)\n    this.updateVolmes     = this.updateVolmes.bind(this)\n  }\n\n  updateVolmes(index, value) {\n    console.log(index, value)\n    let volumes = this.state.volumes\n    volumes[index] = value\n    this.setState({ 'volumes': volumes} )\n  }\n\n\n  getMainLoop(number) {\n    let url = `${this.state.server_url}/get_main_loop/${number}`\n    console.log(url)\n    this.updateLoadStatue(0, 1)\n    fetch(url, { method: 'GET' }).then((response) => {\n      if (!response.ok) {\n        this.updateLoadStatue(0, 0)\n        throw new Error(response.statusText)\n      }\n      return response.json()\n    }).then((result) => {\n      console.log('main loop')\n      let groupUrls_update\n      if (this.state.groupUrls[0]) {\n        groupUrls_update    = [result.main]\n      } else {\n        groupUrls_update    = this.state.groupUrls\n        groupUrls_update[0] = result.main \n      }\n      this.setState({'groupUrls': groupUrls_update})\n    })\n  }\n\n  getAccompanyLoop(index, url) {\n    let mashup_url = `${this.state.server_url}/get_mashup_result?url=${url}&num=${100}`\n\n    if (this.state.groupUrls.length == index+1) {\n      this.state.groupUrls.push([])\n      this.setState({ 'groupUrls': this.state.groupUrls })      \n    }\n\n\n    this.updateLoadStatue(index + 1, 1)\n\n    fetch(mashup_url, { method: 'GET' }).then((response) => {\n      if (!response.ok) {\n        this.updateLoadStatue(index + 1, 0)\n        throw new Error(response.statusText)\n      }\n        return response.json()\n      }).then((result) => {\n        console.log('accompany loop')\n        let groupUrls_update = this.state.groupUrls\n        groupUrls_update[index + 1] = result.rank.slice(0, 4)\n        this.setState({ 'groupUrls': groupUrls_update })\n        return result.rank\n    })\n  }\n\n\n  updateLoadStatue(index, value) {\n    let currentLoadStatue = this.state.loadStatue\n    currentLoadStatue[index] = value\n    this.setState({'loadStatue': currentLoadStatue})\n  }\n  \n\n  updateDecision(index, decision) {\n    if (this.state.urlsDecision.length < index + 1) {\n      this.state.urlsDecision.push(decision)\n    } else {\n      this.state.urlsDecision[index] = decision\n    }\n    this.setState({'urlsDecision': this.state.urlsDecision})\n  }\n\n\n  updateLockStatue (index, value) {\n    let state = this.state\n    state.lockStatue[index] = value\n    if (state.lockStatue.reduce(reducer) == 4) {\n      this.setState({ 'lockStatue': state.lockStatue })\n      if (!this.state.sequencer) this.toggleSequencer()\n    } else {\n      if (value == 1 && index < 3) {\n        console.log('update lock ', index)\n        this.getAccompanyLoop(index, this.state.urlsDecision[index])\n      }\n      this.setState({ 'lockStatue': state.lockStatue })\n    }\n  }\n\n  toggleSequencer() {\n    this.setState({'sequencer': !this.state.sequencer})\n  }\n\n \n\n\n\n  componentDidMount(){\n    console.log(this.state)\n    this.getMainLoop(4)\n  }\n\n  render() {\n    return (\n      <div className=\"App\"> \n        <Helmet> <title>{title}</title> </Helmet>\n        <div className='intro'>\n          <h1 className='text'>Interactive Beat Makers</h1>\n          <h4 className='text'>Choose Four Loop to Make Beats</h4>\n        </div>\n        { \n          this.state.groupUrls.map((urls, index) => (\n            <Loops\n              key={index}\n              urls={urls}\n              index={index}\n              sequencer={this.state.sequencer}\n              value={this.state.lockStatue[index]}\n              currentLoadStatue={this.state.loadStatue[index]}\n              lockStatue={this.state.lockStatue}\n              updateLockStatue={this.updateLockStatue}\n              urlsDecision={this.state.urlsDecision}\n              getNextLoop={(index != 0) ? this.getAccompanyLoop : this.getMainLoop}\n              updateDecision={this.updateDecision}\n              toggleSequencer={this.toggleSequencer}\n              updateLoadStatue={this.updateLoadStatue}\n              updateVolmes={this.updateVolmes}\n              server_url={this.state.server_url}\n            />\n          ))\n        }\n\n        {this.state.sequencer && <Sequencer server_url={this.state.server_url} volumes={this.state.volumes} urlsDecision={this.state.urlsDecision}/>}\n\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nimport './index.css';\nimport 'typeface-roboto';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n    google: {\n        families: ['Baloo Bhai 2']\n    }\n});\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}